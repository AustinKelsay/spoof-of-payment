import { utf8ToBytes } from '@noble/hashes/utils';
declare class u {
    static minPlaintextSize: number;
    static maxPlaintextSize: number;
    static utf8Encode: typeof utf8ToBytes;
    static utf8Decode(bytes: Uint8Array): string;
    static getConversationKey(privkeyA: string, pubkeyB: string): Uint8Array;
    static getMessageKeys(conversationKey: Uint8Array, nonce: Uint8Array): {
        chacha_key: Uint8Array;
        chacha_nonce: Uint8Array;
        hmac_key: Uint8Array;
    };
    static calcPaddedLen(len: number): number;
    static writeU16BE(num: number): Uint8Array;
    static pad(plaintext: string): Uint8Array;
    static unpad(padded: Uint8Array): string;
    static hmacAad(key: Uint8Array, message: Uint8Array, aad: Uint8Array): Uint8Array;
    static decodePayload(payload: string): {
        nonce: Uint8Array;
        ciphertext: Uint8Array;
        mac: Uint8Array;
    };
}
export declare class v2 {
    static utils: typeof u;
    static encrypt(plaintext: string, conversationKey: Uint8Array, nonce?: Uint8Array): string;
    static decrypt(payload: string, conversationKey: Uint8Array): string;
}
declare const _default: {
    v2: typeof v2;
};
export default _default;
